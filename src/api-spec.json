{
    "openapi": "3.1.0",
    "info": {
      "title": "Household accounts user service",
      "version": "1.0.0",
      "description": "Household accounts user service is a Node.js application that provides user account management functionalities, including user registration, authentication, and authorization. This service uses Express.js for the server, Mongoose for database interaction, and MSAL for handling Microsoft authentication.",
      "contact": {
        "name": "Jehyun Jung",
        "email": "jehyunjung@gmail.com"
      }
    },
    "servers": [
      {
        "url": "http://localhost:3002",
        "description": "local url"
      },
      {
        "url": "https://household-accounts-user-service.azurewebsites.net",
        "description": "Development env"
      }
    ],
    "tags": [
      {
        "name": "Operational",
        "description": "Operational endpoints used to check the status of server"
      },
      {
        "name": "Authentication",
        "description": "Paths that handle user authentication. It will provide tokens."
      },
      {
          "name": "User",
          "description": "Handle a user" 
      }
    ],
    "paths": {
      "/health": {
        "get": {
          "tags": [
            "Operational"
          ],
          "operationId": "get-health",
          "summary": "Checks the operational status of the API",
          "description": "Checks the operational status of the API",
          "responses": {
            "200": {
              "description": "Account Service is healthy and ready to handle your requests.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "description": "health endpoint response",
                    "required": [
                      "msg"
                    ],
                    "properties": {
                      "msg": {
                        "type": "string",
                        "example": "Account Service is healthy and ready to handle your requests."
                      }
                    }
                  },
                  "examples": {
                    "success": {
                      "value": {
                        "msg": "Account Service is healthy and ready to handle your requests."
                      }
                    }
                  }
                }
              }
            },
            "default": {
              "description": "API unavailable"
            }
          }
        }
      },
      "/auth/signup": {
        "post": {
          "tags": [
            "Authentication"
          ],
          "operationId": "post-signup",
          "summary": "Onboarding process (Create a new user)",
          "description": "Onboarding process (Create a new user)",
          "requestBody": {
              "content":{
                  "application/json": {
                      "schema": {
                          "$ref": "#/components/schemas/postSignup"
                      }
                  }
              }
          },
           "responses": {
            "201": {
              "description": "Created new user",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "required": [
                      "msg"
                    ],
                    "properties": {
                      "msg": {
                        "type": "string",
                        "example": "New User created successfully."
                      }
                    }
                  },
                  "examples": {
                    "success": {
                      "value": {
                        "msg": "New User created successfully."
                      }
                    }
                  }
                }
              }
            },
            "default": {
              "description": "API unavailable"
            }
          }
        }
      },
      "/auth/login": {
        "post": {
          "tags": [
            "Authentication"
          ],
          "operationId": "post-login",
          "summary": "Login to get access token",
          "description": "Login to get access token",
           "requestBody": {
              "content":{
                  "application/json": {
                      "schema": {
                          "$ref": "#/components/schemas/postLogin"
                      }
                  }
              }
          },
           "responses": {
            "200": {
              "description": "Login a user",
              "content": {
                "application/json": {
                  "schema": {
                      "$ref": "#/components/schemas/resLogin"
                  }
                }
              }
            },
            "default": {
              "description": "API unavailable"
            }
          }
        }
      },
      "/auth/login/ms": {
        "get": {
          "tags": [
            "Authentication"
          ],
          "operationId": "get-auth-login-ms",
          "summary": "It will provide a url to redirect to the Microsoft login page.",
          "description": "It will provide a url to redirect to the Microsoft login page. After successful authentication, Microsoft redirects to the application’s /redirect endpoint with an authorization code.'",
           "responses": {
            "200": {
              "description": "Get auth code.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "required": [
                      "authorizeUrl"
                    ],
                    "properties": {
                      "authorizeUrl": {
                        "type": "string",
                        "example": "https://..."
                      }
                    }
                  }
                }
              }
            },
            "default": {
              "description": "API unavailable"
            }
          }
        }
      },
      "/auth/redirect/ms": {
        "post": {
          "tags": [
            "Authentication"
          ],
          "operationId": "post-redirect-ms",
          "summary": "Handle state from MSAL to get Tokens",
          "description": "Handle state from MSAL to get Tokens. and send token and user info to Client.",
           "responses": {
            "200": {
              "description": "Login a user",
              "content": {
                "application/json": {
                  "schema": {
                      "$ref": "#/components/schemas/resLogin"
                  }
                }
              }
            },
            "default": {
              "description": "API unavailable"
            }
          }
        }
      },
      "/auth/signout-url/ms": {
        "post": {
          "tags": [
            "Authentication"
          ],
          "operationId": "post-signout-url-ms",
          "summary": "Revoke tokens",
          "description": "Revoke tokens"
        }
      },
      "/auth/login/google": {
        "get": {
          "tags": [
            "Authentication"
          ],
          "operationId": "get-auth-login-google",
          "summary": "It will provide a url to redirect to the Google login page",
          "description": "It will provide a url to redirect to the Google login page. After successful authentication, Google redirects to the application’s /redirect endpoint with an authorization code.",
          "responses": {
            "200": {
              "description": "Get auth code.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "required": [
                      "authorizeUrl"
                    ],
                    "properties": {
                      "authorizeUrl": {
                        "type": "string",
                        "example": "https://..."
                      }
                    }
                  }
                }
              }
            },
            "default": {
              "description": "API unavailable"
            }
          }
        }
      },
      "/auth/redirect/google": {
        "get": {
          "tags": [
            "Authentication"
          ],
          "operationId": "post-redirect-google",
          "summary": "Handle state from Google to get Tokens",
          "description": "Handle state from MSAL to get Tokens. and send token and user info to Client.",
           "responses": {
            "200": {
              "description": "Login a user",
              "content": {
                "application/json": {
                  "schema": {
                      "$ref": "#/components/schemas/resLogin"
                  }
                }
              }
            },
            "default": {
              "description": "API unavailable"
            }
          }
        }
      },
      "/user/check-exist/{userId}": {
        "get": {
          "tags": [
            "User"
          ],
          "operationId": "get-user-check-exist",
          "summary": "Handle state from Google to get Tokens",
          "description": "Handle state from MSAL to get Tokens. and send token and user info to Client.",
          "parameters": [
              {
                  "name": "userId",
                  "in": "path",
                  "required": true,
                  "schema": {
                      "type": "string"
                  }
              }
          ],
           "responses": {
            "200": {
              "description": "User exists",
              "content": {
                "application/json": {
                  "schema": {
                      "type": "object",
                      "properties": {
                          "message":{
                              "type": "string",
                              "example": "user exists."                    
                          }
                      }
                  }
                }
              }
            },
            "404": {
              "description": "Not Found user",
              "content": {
                "application/json": {
                  "schema": {
                      "type": "object",
                      "properties": {
                          "message":{
                              "type": "string",
                              "example": "user not found."                    
                          }
                      }
                  }
                }
              }
            },
            "default": {
              "description": "API unavailable"
            }
          }
        }}
    },
    "components": {
      "schemas": {
          "postSignup": {
              "type": "object",
              "description": "Payload to create a new user",
              "required": ["email", "password", "fullname"],
              "properties": {
                  "email":{
                      "type": "string"                    
                  },
                  "password": {
                      "type": "string"
                  },
                  "fullname": {
                      "type": "string"
                  }
              }
          },
          "postLogin": {
              "type": "object",
              "description": "Payload to login a user",
              "required": ["email", "password"],
              "properties": {
                  "email":{
                      "type": "string"                    
                  },
                  "password": {
                      "type": "string"
                  }
              }
          },
          "resLogin": {
              "type": "object",
              "required": [
              "userInfo", "accessToken"
              ],
              "properties": {
              "userInfo": {
                  "type": "object",
                  "properties": {
                  "_id": {
                      "type": "string"
                  },
                  "fullname": {
                      "type": "string"
                  },
                  "firstName": {
                      "type": "string"
                  },
                  "lastName": {
                      "type": "string"
                  },
                  "email": {
                      "type": "string"
                  },
                  "joinThrough": {
                      "type": "string"
                  },
                  "lastLogin": {
                      "type": "string"
                  },
                  "createdAt": {
                      "type": "string"
                  },
                  "updatedAt": {
                      "type": "string"
                  }
                  }
              },
              "accessToken": {
                  "type": "string",
                  "accessToken": "yJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiO..."
              }
              }
          }
      }
    }
  }